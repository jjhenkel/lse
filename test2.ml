(* AUTO-GENERATED by c2ocaml plugin 1.0 *)

open Lsee;;
open Utils;;
open State;;
open Driver;;
open Blocks;;
open Actions;;
open GccTypes;;
open Procedures;;
open Expressions;;

let main = 
(*-------------------------------------------------------- 
  // working_directory: /target/hexchat/build
  // source_file_name: ../src/common/server.c
  // base_name: server.c
  // name: traverse_http
  // fid: 1008
  ---------------------------------------------------------*)

  let _typeSELF = GccType.pointer(GccType.self)
  in let type0x7f9e66d6c690 = 
    GccType.integer(false, 32, 32, Z.of_string "0", Z.of_string "4294967295")
  in let type0x7f9e66d6c5e8 = 
    GccType.integer(true, 32, 32, Z.of_string "-2147483648", Z.of_string "2147483647")
  in let type0x7f9e66d6c3f0 = 
    GccType.integer(false, 8, 8, Z.of_string "0", Z.of_string "255")
  in let type0x7f9e660ccbd0 = 
    GccType.integer(true, 32, 32, Z.of_string "-2147483648", Z.of_string "2147483647")
  in let type0x7f9e64864d20 = 
    GccType.integer(true, 64, 64, Z.of_string "0", Z.of_string "511")
  in let type0x7f9e64864dc8 = 
    GccType.array(type0x7f9e66d6c3f0, type0x7f9e64864d20)
  in let type0x7f9e64864b28 = 
    GccType.pointer(type0x7f9e64864dc8)
  in let type0x7f9e66d6c7e0 = 
    GccType.integer(false, 64, 64, Z.of_string "0", Z.of_string "18446744073709551615")
  in let type0x7f9e64889690 = 
    GccType.integer(true, 64, 64, Z.of_string "0", Z.of_string "24")
  in let type0x7f9e64889738 = 
    GccType.array(type0x7f9e66d6c3f0, type0x7f9e64889690)
  in let type0x7f9e648897e0 = 
    GccType.pointer(type0x7f9e64889738)
  in let type0x7f9e66d77f18 = 
    GccType.pointer(type0x7f9e66d6c3f0)
  in let type0x7f9e64b5ab28 = 
    GccType.record("hexchatprefs", [|
        (* var decls *)
      |], [|
        (* field decls *)
      |], [|
        (* type decls *)
      |], [|
        (* const decls *)
      |])
  in let type0x7f9e6489f0a8 = 
    GccType.integer(true, 64, 64, Z.of_string "0", Z.of_string "251")
  in let type0x7f9e6489f2a0 = 
    GccType.array(type0x7f9e66d6c3f0, type0x7f9e6489f0a8)
  in let type0x7f9e6489f348 = 
    GccType.pointer(type0x7f9e6489f2a0)
  in let type0x7f9e65e7f150 = 
    GccType.integer(true, 64, 64, Z.of_string "0", Z.of_string "5")
  in let type0x7f9e65e7f2a0 = 
    GccType.array(type0x7f9e66d6c3f0, type0x7f9e65e7f150)
  in let type0x7f9e6484dbd0 = 
    GccType.pointer(type0x7f9e65e7f2a0)
  in let type0x7f9e65f68348 = 
    GccType.integer(true, 64, 64, Z.of_string "0", Z.of_string "31")
  in let type0x7f9e65f683f0 = 
    GccType.array(type0x7f9e66d6c3f0, type0x7f9e65f68348)
  in let type0x7f9e6486cbd0 = 
    GccType.pointer(type0x7f9e65f683f0)
  in let type0x7f9e66d6cf18 = 
    GccType.void
  in let type0x7f9e65d94d20 = 
    GccType.integer(true, 64, 64, Z.of_string "0", Z.of_string "255")
  in let type0x7f9e65d94dc8 = 
    GccType.array(type0x7f9e66d6c3f0, type0x7f9e65d94d20)
  in let type0x7f9e64864930 = 
    GccType.pointer(type0x7f9e65d94dc8)
  in let type0x7f9e66d6c000 = 
    GccType.integer(false, 64, 64, Z.of_string "0", Z.of_string "18446744073709551615")
  in let type0x7f9e660cc7e0 = 
    GccType.integer(false, 8, 8, Z.of_string "0", Z.of_string "255")
  in let type0x7f9e660e8150 = 
    GccType.pointer(type0x7f9e660cc7e0)
  in let type0x7f9e65f6d738 = 
    GccType.integer(true, 64, 64, Z.of_string "0", Z.of_string "2")
  in let type0x7f9e64878f18 = 
    GccType.array(type0x7f9e66d6c3f0, type0x7f9e65f6d738)
  in let type0x7f9e64889348 = 
    GccType.pointer(type0x7f9e64878f18)
  in let type0x7f9e66ed7dc8 = 
    GccType.integer(true, 64, 64, Z.of_string "-9223372036854775808", Z.of_string "9223372036854775807")
  in let type0x7f9e66e72498 = 
    GccType.integer(false, 64, 64, Z.of_string "0", Z.of_string "18446744073709551615")
  in let type0x7f9e66d74150 = 
    GccType.void
  in let type0x7f9e66d741f8 = 
    GccType.pointer(type0x7f9e66d74150)
  in let type0x7f9e66eb81f8 = 
    GccType.integer(true, 64, 64, Z.of_string "0", Z.of_string "3")
  in let type0x7f9e66eb82a0 = 
    GccType.array(type0x7f9e66d6c3f0, type0x7f9e66eb81f8)
  in let type0x7f9e6489f7e0 = 
    GccType.pointer(type0x7f9e66eb82a0)
  in let expr0x7f9e64980e58 = 
    Expr.ssa("_1", 1, Expr.nothing(type0x7f9e66d6c690))
  in let expr0x7f9e66d54f48 = 
    Expr.u_int_cst(type0x7f9e66d6c690, Z.of_string "0")
  in let expr0x7f9e6489e510 = 
    Expr.variable_decl(type0x7f9e66d6c5e8, VarDecl.make("n", 32, 32))
  in let expr0x7f9e649ed090 = 
    Expr.ssa("n_16", 16, expr0x7f9e6489e510)
  in let expr0x7f9e649ed318 = 
    Expr.ssa("n_25", 25, expr0x7f9e6489e510)
  in let expr0x7f9e649ed4c8 = 
    Expr.ssa("n_31", 31, expr0x7f9e6489e510)
  in let expr0x7f9e649ed708 = 
    Expr.ssa("n_39", 39, expr0x7f9e6489e510)
  in let expr0x7f9e65fa1240 = 
    Expr.s_int_cst(type0x7f9e66d6c5e8, Z.of_string "11")
  in let expr0x7f9e6498d318 = 
    Expr.ssa("_12", 12, Expr.nothing(type0x7f9e66d6c5e8))
  in let expr0x7f9e66d71078 = 
    Expr.s_int_cst(type0x7f9e66d6c5e8, Z.of_string "0")
  in let expr0x7f9e6498d3f0 = 
    Expr.ssa("_14", 14, Expr.nothing(type0x7f9e66d6c5e8))
  in let expr0x7f9e649ed798 = 
    Expr.ssa("n_41", 41, expr0x7f9e6489e510)
  in let expr0x7f9e66d71090 = 
    Expr.s_int_cst(type0x7f9e66d6c5e8, Z.of_string "1")
  in let expr0x7f9e6498d480 = 
    Expr.ssa("_15", 15, Expr.nothing(type0x7f9e66d6c3f0))
  in let expr0x7f9e648a0f90 = 
    Expr.u_int_cst(type0x7f9e66d6c3f0, Z.of_string "10")
  in let expr0x7f9e649ed0d8 = 
    Expr.ssa("_17", 17, Expr.nothing(type0x7f9e66d6c5e8))
  in let expr0x7f9e649ed870 = 
    Expr.ssa("_44", 44, Expr.nothing(type0x7f9e66d6c5e8))
  in let expr0x7f9e649ed828 = 
    Expr.ssa("_43", 43, Expr.nothing(type0x7f9e66d6c5e8))
  in let expr0x7f9e649ed7e0 = 
    Expr.ssa("_42", 42, Expr.nothing(type0x7f9e66d6c5e8))
  in let expr0x7f9e6489e360 = 
    Expr.variable_decl(type0x7f9e64864dc8, VarDecl.make("buf", 4096, 8))
  in let expr0x7f9e648a4780 = 
    Expr.address_of(type0x7f9e64864b28, expr0x7f9e6489e360)
  in let expr0x7f9e64862738 = 
    Expr.u_int_cst(type0x7f9e66d6c7e0, Z.of_string "512")
  in let expr0x7f9e6489a9c0 = 
    Expr.string_cst(type0x7f9e64889738, 25, "\"CONNECT %s:%d HTTP/1.0\\r\\n\"")
  in let expr0x7f9e648a47c0 = 
    Expr.address_of(type0x7f9e648897e0, expr0x7f9e6489a9c0)
  in let expr0x7f9e64894e80 = 
    Expr.parameter_decl(type0x7f9e66d77f18, "serverAddr", type0x7f9e66d77f18)
  in let expr0x7f9e649ed240 = 
    Expr.ssa("serverAddr_22(D)", 22, expr0x7f9e64894e80)
  in let expr0x7f9e64894f00 = 
    Expr.parameter_decl(type0x7f9e66d6c5e8, "port", type0x7f9e66d6c5e8)
  in let expr0x7f9e649ed288 = 
    Expr.ssa("port_23(D)", 23, expr0x7f9e64894f00)
  in let expr0x7f9e64b6a8e8 = 
    Expr.field_decl(type0x7f9e66d6c690, FieldDecl.make("hex_net_proxy_auth", "32", 32, "352", 128, 64, false))
  in let expr0x7f9e64c02090 = 
    Expr.variable_decl(type0x7f9e64b5ab28, VarDecl.make("prefs", 46656, 32))
  in let expr0x7f9e64964a20 = 
    Expr.component_ref(type0x7f9e66d6c690, expr0x7f9e64c02090, expr0x7f9e64b6a8e8)
  in let expr0x7f9e6489e480 = 
    Expr.variable_decl(type0x7f9e6489f2a0, VarDecl.make("auth_data2", 2016, 8))
  in let expr0x7f9e648a4860 = 
    Expr.address_of(type0x7f9e6489f348, expr0x7f9e6489e480)
  in let expr0x7f9e648a6180 = 
    Expr.u_int_cst(type0x7f9e66d6c7e0, Z.of_string "252")
  in let expr0x7f9e648a48a0 = 
    Expr.string_cst(type0x7f9e65e7f2a0, 6, "\"%s:%s\"")
  in let expr0x7f9e648a48c0 = 
    Expr.address_of(type0x7f9e6484dbd0, expr0x7f9e648a48a0)
  in let expr0x7f9e64b71da8 = 
    Expr.field_decl(type0x7f9e65f683f0, FieldDecl.make("hex_net_proxy_user", "256", 8, "4304", 128, 80, false))
  in let expr0x7f9e6489aa20 = 
    Expr.component_ref(type0x7f9e65f683f0, expr0x7f9e64c02090, expr0x7f9e64b71da8)
  in let expr0x7f9e648a4900 = 
    Expr.address_of(type0x7f9e6486cbd0, expr0x7f9e6489aa20)
  in let expr0x7f9e64b71d10 = 
    Expr.field_decl(type0x7f9e65f683f0, FieldDecl.make("hex_net_proxy_pass", "256", 8, "4272", 128, 80, false))
  in let expr0x7f9e6489aa50 = 
    Expr.component_ref(type0x7f9e65f683f0, expr0x7f9e64c02090, expr0x7f9e64b71d10)
  in let expr0x7f9e648a4940 = 
    Expr.address_of(type0x7f9e6486cbd0, expr0x7f9e6489aa50)
  in let expr0x7f9e6489e5a0 = 
    Expr.variable_decl(type0x7f9e66d6c5e8, VarDecl.make("n2", 32, 32))
  in let expr0x7f9e649ed3a8 = 
    Expr.ssa("n2_27", 27, expr0x7f9e6489e5a0)
  in let expr0x7f9e6498d000 = 
    Expr.ssa("n2.27_2", 2, Expr.nothing(type0x7f9e66d6c690))
  in let expr0x7f9e6489e3f0 = 
    Expr.variable_decl(type0x7f9e65d94dc8, VarDecl.make("auth_data", 2048, 8))
  in let expr0x7f9e648a49e0 = 
    Expr.address_of(type0x7f9e64864930, expr0x7f9e6489e3f0)
  in let expr0x7f9e648a4a20 = 
    Expr.address_of(type0x7f9e6489f348, expr0x7f9e6489e480)
  in let expr0x7f9e6498d048 = 
    Expr.ssa("_3", 3, Expr.nothing(type0x7f9e66d6c7e0))
  in let expr0x7f9e6498d090 = 
    Expr.ssa("_4", 4, Expr.nothing(type0x7f9e66d6c7e0))
  in let expr0x7f9e6498d0d8 = 
    Expr.ssa("_5", 5, Expr.nothing(type0x7f9e66d6c000))
  in let expr0x7f9e6498d120 = 
    Expr.ssa("_6", 6, Expr.nothing(type0x7f9e660e8150))
  in let expr0x7f9e6497fea0 = 
    Expr.address_of(type0x7f9e64864b28, expr0x7f9e6489e360)
  in let expr0x7f9e648967a8 = 
    Expr.string_cst(type0x7f9e65f683f0, 32, "\"Proxy-Authorization: Basic %s\\r\\n\"")
  in let expr0x7f9e6497ff20 = 
    Expr.address_of(type0x7f9e6486cbd0, expr0x7f9e648967a8)
  in let expr0x7f9e6497ff40 = 
    Expr.address_of(type0x7f9e64864930, expr0x7f9e6489e3f0)
  in let expr0x7f9e649ed480 = 
    Expr.ssa("_30", 30, Expr.nothing(type0x7f9e66d6c5e8))
  in let expr0x7f9e6498d168 = 
    Expr.ssa("_7", 7, Expr.nothing(type0x7f9e66d6c7e0))
  in let expr0x7f9e6498d1b0 = 
    Expr.ssa("_8", 8, Expr.nothing(type0x7f9e66d6c7e0))
  in let expr0x7f9e6498d1f8 = 
    Expr.ssa("_9", 9, Expr.nothing(type0x7f9e66d6c000))
  in let expr0x7f9e6498d240 = 
    Expr.ssa("_10", 10, Expr.nothing(type0x7f9e660e8150))
  in let expr0x7f9e6497ffe0 = 
    Expr.address_of(type0x7f9e64864b28, expr0x7f9e6489e360)
  in let expr0x7f9e648a6288 = 
    Expr.string_cst(type0x7f9e64878f18, 3, "\"\\r\\n\"")
  in let expr0x7f9e6498e060 = 
    Expr.address_of(type0x7f9e64889348, expr0x7f9e648a6288)
  in let expr0x7f9e649ed558 = 
    Expr.ssa("_33", 33, Expr.nothing(type0x7f9e66d6c5e8))
  in let expr0x7f9e649ed5a0 = 
    Expr.ssa("n_34", 34, expr0x7f9e6489e510)
  in let expr0x7f9e6498d2d0 = 
    Expr.ssa("_11", 11, Expr.nothing(type0x7f9e66d6c7e0))
  in let expr0x7f9e64894e00 = 
    Expr.parameter_decl(type0x7f9e66d6c5e8, "sok", type0x7f9e66d6c5e8)
  in let expr0x7f9e649ed5e8 = 
    Expr.ssa("sok_35(D)", 35, expr0x7f9e64894e00)
  in let expr0x7f9e648a4e20 = 
    Expr.address_of(type0x7f9e64864b28, expr0x7f9e6489e360)
  in let expr0x7f9e64894d80 = 
    Expr.parameter_decl(type0x7f9e66d6c5e8, "print_fd", type0x7f9e66d6c5e8)
  in let expr0x7f9e649ed678 = 
    Expr.ssa("print_fd_37(D)", 37, expr0x7f9e64894d80)
  in let expr0x7f9e648a4ec0 = 
    Expr.address_of(type0x7f9e64864b28, expr0x7f9e6489e360)
  in let expr0x7f9e65fb0150 = 
    Expr.s_int_cst(type0x7f9e66d6c5e8, Z.of_string "512")
  in let expr0x7f9e6498e260 = 
    Expr.address_of(type0x7f9e64864b28, expr0x7f9e6489e360)
  in let expr0x7f9e648a4f80 = 
    Expr.string_cst(type0x7f9e65e7f2a0, 6, "\"HTTP/\"")
  in let expr0x7f9e6498e280 = 
    Expr.address_of(type0x7f9e6484dbd0, expr0x7f9e648a4f80)
  in let expr0x7f9e648a6330 = 
    Expr.u_int_cst(type0x7f9e66e72498, Z.of_string "5")
  in let expr0x7f9e6498d3a8 = 
    Expr.ssa("_13", 13, Expr.nothing(type0x7f9e66d741f8))
  in let expr0x7f9e6498e2e0 = 
    Expr.address_of(type0x7f9e64864b28, expr0x7f9e6489e360)
  in let expr0x7f9e66ec7960 = 
    Expr.u_int_cst(type0x7f9e66d6c000, Z.of_string "9")
  in let expr0x7f9e648a8080 = 
    Expr.string_cst(type0x7f9e66eb82a0, 4, "\"200\"")
  in let expr0x7f9e6498e380 = 
    Expr.address_of(type0x7f9e6489f7e0, expr0x7f9e648a8080)
  in let expr0x7f9e6484e5a0 = 
    Expr.u_int_cst(type0x7f9e66e72498, Z.of_string "3")
  in let expr0x7f9e648a8180 = 
    Expr.address_of(type0x7f9e64864b28, expr0x7f9e6489e360)
  in let expr0x7f9e6498a3b8 = 
    Expr.array_ref(type0x7f9e66d6c3f0, expr0x7f9e6489e360, expr0x7f9e66d71078)
  in let expr0x7f9e6496fb40 = 
    Expr.constructor(type0x7f9e64864dc8)
  in let expr0x7f9e6496fb58 = 
    Expr.constructor(type0x7f9e65d94dc8)
  in let expr0x7f9e6496fb70 = 
    Expr.constructor(type0x7f9e6489f2a0)
  in let call0x7f9e64981738 = Expr.call(
    type0x7f9e660ccbd0,
    "g_snprintf", [|
      (Expr.parameter("p1", 0, expr0x7f9e648a4780));
      (Expr.parameter("p2", 1, expr0x7f9e64862738));
      (Expr.parameter("p3", 2, expr0x7f9e648a47c0));
      (Expr.parameter("p4", 3, expr0x7f9e649ed240));
      (Expr.parameter("p5", 4, expr0x7f9e649ed288));
  |])
  in let call0x7f9e649817e0 = Expr.call(
    type0x7f9e660ccbd0,
    "g_snprintf", [|
      (Expr.parameter("p1", 0, expr0x7f9e648a4860));
      (Expr.parameter("p2", 1, expr0x7f9e648a6180));
      (Expr.parameter("p3", 2, expr0x7f9e648a48c0));
      (Expr.parameter("p4", 3, expr0x7f9e648a4900));
      (Expr.parameter("p5", 4, expr0x7f9e648a4940));
  |])
  in let call0x7f9e64966b48 = Expr.call(
    type0x7f9e66d6cf18,
    "base64_encode", [|
      (Expr.parameter("to", 0, expr0x7f9e648a49e0));
      (Expr.parameter("from", 1, expr0x7f9e648a4a20));
      (Expr.parameter("len", 2, expr0x7f9e6498d000));
  |])
  in let call0x7f9e64981888 = Expr.call(
    type0x7f9e660ccbd0,
    "g_snprintf", [|
      (Expr.parameter("p1", 0, expr0x7f9e6498d120));
      (Expr.parameter("p2", 1, expr0x7f9e6498d090));
      (Expr.parameter("p3", 2, expr0x7f9e6497ff20));
      (Expr.parameter("p4", 3, expr0x7f9e6497ff40));
  |])
  in let call0x7f9e64966be0 = Expr.call(
    type0x7f9e660ccbd0,
    "g_snprintf", [|
      (Expr.parameter("p1", 0, expr0x7f9e6498d240));
      (Expr.parameter("p2", 1, expr0x7f9e6498d1b0));
      (Expr.parameter("p3", 2, expr0x7f9e6498e060));
  |])
  in let call0x7f9e64981930 = Expr.call(
    type0x7f9e66ed7dc8,
    "send", [|
      (Expr.parameter("p1", 0, expr0x7f9e649ed5e8));
      (Expr.parameter("p2", 1, expr0x7f9e648a4e20));
      (Expr.parameter("p3", 2, expr0x7f9e6498d2d0));
      (Expr.parameter("p4", 3, expr0x7f9e66d71078));
  |])
  in let call0x7f9e649819d8 = Expr.call(
    type0x7f9e66d6c5e8,
    "http_read_line", [|
      (Expr.parameter("print_fd", 0, expr0x7f9e649ed678));
      (Expr.parameter("sok", 1, expr0x7f9e649ed5e8));
      (Expr.parameter("buf", 2, expr0x7f9e648a4ec0));
      (Expr.parameter("len", 3, expr0x7f9e65fb0150));
  |])
  in let call0x7f9e64966c78 = Expr.call(
    type0x7f9e66d6c5e8,
    "memcmp", [|
      (Expr.parameter("p1", 0, expr0x7f9e6498e260));
      (Expr.parameter("p2", 1, expr0x7f9e6498e280));
      (Expr.parameter("p3", 2, expr0x7f9e648a6330));
  |])
  in let call0x7f9e64966d10 = Expr.call(
    type0x7f9e66d6c5e8,
    "memcmp", [|
      (Expr.parameter("p1", 0, expr0x7f9e6498d3a8));
      (Expr.parameter("p2", 1, expr0x7f9e6498e380));
      (Expr.parameter("p3", 2, expr0x7f9e6484e5a0));
  |])
  in let call0x7f9e64981a80 = Expr.call(
    type0x7f9e66d6c5e8,
    "http_read_line", [|
      (Expr.parameter("print_fd", 0, expr0x7f9e649ed678));
      (Expr.parameter("sok", 1, expr0x7f9e649ed5e8));
      (Expr.parameter("buf", 2, expr0x7f9e648a8180));
      (Expr.parameter("len", 3, expr0x7f9e65fb0150));
  |])
  in let block_0 = 
    let step_0_0 = Action.start 
    in Block.block (
      0,
      [| step_0_0 |],
      [||],
      [| "<ENTRY>" |]
    )
  in let block_2 = 
    let step_2_1 = 
      Action.call(call0x7f9e64981738)
    in let step_2_2 = 
      Action.assign(expr0x7f9e649ed318, call0x7f9e64981738)
    in let step_2_3 = 
      Action.debug("# DEBUG n => n_25")
    in let step_2_4 = 
      Action.assign(expr0x7f9e64980e58, expr0x7f9e64964a20)
    in let step_2_5 = 
      Action.assign(expr0x7f9e649ed090, expr0x7f9e649ed318)
    in Block.block(
      2,
      [|
        step_2_1;
        step_2_2;
        step_2_3;
        step_2_4;
        step_2_5;
      |],
      [|
        ("g_snprintf", 1);
      |],
      [|
        "# .MEM_24 = VDEF <.MEM_21(D)>\nn_25 = g_snprintf (&buf, 512, \"CONNECT %s:%d HTTP/1.0\\r\\n\", serverAddr_22(D), port_23(D));";
        "<CAPTURES RETURN>";
        "# DEBUG n => n_25";
        "# VUSE <.MEM_24>\n_1 = prefs.hex_net_proxy_auth;";
        "n_16 = n_25";
      |]
    )
  in let block_3 = 
    let step_3_6 = 
      Action.assume(2, Expr.bneq(GccType.boolean, expr0x7f9e64980e58, expr0x7f9e66d54f48))
    in let step_3_7 = 
      Action.call(call0x7f9e649817e0)
    in let step_3_8 = 
      Action.assign(expr0x7f9e649ed3a8, call0x7f9e649817e0)
    in let step_3_9 = 
      Action.debug("# DEBUG n2 => n2_27")
    in let step_3_10 = 
      Action.assign(expr0x7f9e6498d000, expr0x7f9e649ed3a8)
    in let step_3_11 = 
      Action.call(call0x7f9e64966b48)
    in let step_3_12 = 
      Action.assign(expr0x7f9e6498d048, expr0x7f9e649ed318)
    in let step_3_13 = 
      Action.assign(expr0x7f9e6498d090, Expr.minus(
        type0x7f9e66d6c7e0, expr0x7f9e64862738, expr0x7f9e6498d048))
    in let step_3_14 = 
      Action.assign(expr0x7f9e6498d0d8, expr0x7f9e649ed318)
    in let step_3_15 = 
      Action.assign(expr0x7f9e6498d120, Expr.pointer_plus(
        type0x7f9e660e8150, expr0x7f9e6497fea0, expr0x7f9e6498d0d8))
    in let step_3_16 = 
      Action.call(call0x7f9e64981888)
    in let step_3_17 = 
      Action.assign(expr0x7f9e649ed480, call0x7f9e64981888)
    in let step_3_18 = 
      Action.assign(expr0x7f9e649ed4c8, Expr.plus(
        type0x7f9e66d6c5e8, expr0x7f9e649ed480, expr0x7f9e649ed318))
    in let step_3_19 = 
      Action.debug("# DEBUG n => n_31")
    in let step_3_20 = 
      Action.assign(expr0x7f9e649ed090, expr0x7f9e649ed4c8)
    in Block.block(
      3,
      [|
        step_3_6;
        step_3_7;
        step_3_8;
        step_3_9;
        step_3_10;
        step_3_11;
        step_3_12;
        step_3_13;
        step_3_14;
        step_3_15;
        step_3_16;
        step_3_17;
        step_3_18;
        step_3_19;
        step_3_20;
      |],
      [|
        ("base64_encode", 1);
        ("g_snprintf", 2);
      |],
      [|
        "assume TRUE (_1 != 0)";
        "# .MEM_26 = VDEF <.MEM_24>\nn2_27 = g_snprintf (&auth_data2, 252, \"%s:%s\", &prefs.hex_net_proxy_user, &prefs.hex_net_proxy_pass);";
        "<CAPTURES RETURN>";
        "# DEBUG n2 => n2_27";
        "n2.27_2 = (unsigned int) n2_27;";
        "# .MEM_28 = VDEF <.MEM_26>\nbase64_encode (&auth_data, &auth_data2, n2.27_2);";
        "_3 = (long unsigned int) n_25;";
        "_4 = 512 - _3;";
        "_5 = (sizetype) n_25;";
        "_6 = &buf + _5;";
        "# .MEM_29 = VDEF <.MEM_28>\n_30 = g_snprintf (_6, _4, \"Proxy-Authorization: Basic %s\\r\\n\", &auth_data);";
        "<CAPTURES RETURN>";
        "n_31 = _30 + n_25;";
        "# DEBUG n => n_31";
        "n_16 = n_31";
      |]
    )
  in let block_4 = 
    let step_4_21 = 
      Action.assume(2, Expr.beq(GccType.boolean, expr0x7f9e64980e58, expr0x7f9e66d54f48))
    in let step_4_22 = 
      Action.debug("# DEBUG n => n_16")
    in let step_4_23 = 
      Action.assign(expr0x7f9e6498d168, expr0x7f9e649ed090)
    in let step_4_24 = 
      Action.assign(expr0x7f9e6498d1b0, Expr.minus(
        type0x7f9e66d6c7e0, expr0x7f9e64862738, expr0x7f9e6498d168))
    in let step_4_25 = 
      Action.assign(expr0x7f9e6498d1f8, expr0x7f9e649ed090)
    in let step_4_26 = 
      Action.assign(expr0x7f9e6498d240, Expr.pointer_plus(
        type0x7f9e660e8150, expr0x7f9e6497ffe0, expr0x7f9e6498d1f8))
    in let step_4_27 = 
      Action.call(call0x7f9e64966be0)
    in let step_4_28 = 
      Action.assign(expr0x7f9e649ed558, call0x7f9e64966be0)
    in let step_4_29 = 
      Action.assign(expr0x7f9e649ed5a0, Expr.plus(
        type0x7f9e66d6c5e8, expr0x7f9e649ed558, expr0x7f9e649ed090))
    in let step_4_30 = 
      Action.debug("# DEBUG n => n_34")
    in let step_4_31 = 
      Action.assign(expr0x7f9e6498d2d0, expr0x7f9e649ed5a0)
    in let step_4_32 = 
      Action.call(call0x7f9e64981930)
    in let step_4_33 = 
      Action.call(call0x7f9e649819d8)
    in let step_4_34 = 
      Action.assign(expr0x7f9e649ed708, call0x7f9e649819d8)
    in let step_4_35 = 
      Action.debug("# DEBUG n => n_39")
    in Block.block(
      4,
      [|
        step_4_21;
        step_4_22;
        step_4_23;
        step_4_24;
        step_4_25;
        step_4_26;
        step_4_27;
        step_4_28;
        step_4_29;
        step_4_30;
        step_4_31;
        step_4_32;
        step_4_33;
        step_4_34;
        step_4_35;
      |],
      [|
        ("g_snprintf", 1);
        ("http_read_line", 1);
        ("send", 1);
      |],
      [|
        "assume FALSE (_1 != 0)";
        "# DEBUG n => n_16";
        "_7 = (long unsigned int) n_16;";
        "_8 = 512 - _7;";
        "_9 = (sizetype) n_16;";
        "_10 = &buf + _9;";
        "# .MEM_32 = VDEF <.MEM_18>\n_33 = g_snprintf (_10, _8, \"\\r\\n\");";
        "<CAPTURES RETURN>";
        "n_34 = _33 + n_16;";
        "# DEBUG n => n_34";
        "_11 = (long unsigned int) n_34;";
        "# .MEM_36 = VDEF <.MEM_32>\nsend (sok_35(D), &buf, _11, 0);";
        "# .MEM_38 = VDEF <.MEM_36>\nn_39 = http_read_line (print_fd_37(D), sok_35(D), &buf, 512);";
        "<CAPTURES RETURN>";
        "# DEBUG n => n_39";
      |]
    )
  in let block_5 = 
    let step_5_36 = 
      Action.assume(4, Expr.blte(GccType.boolean, expr0x7f9e649ed708, expr0x7f9e65fa1240))
    in let step_5_37 = 
      Action.assign(expr0x7f9e649ed870, expr0x7f9e66d71090)
    in let step_5_38 = 
      Action.assign(expr0x7f9e649ed0d8, expr0x7f9e649ed870)
    in Block.block(
      5,
      [|
        step_5_36;
        step_5_37;
        step_5_38;
      |],
      [|
        (* no calls *)
      |],
      [|
        "assume TRUE (n_39 <= 11)";
        "_44 = 1;";
        "_17 = _44";
      |]
    )
  in let block_6 = 
    let step_6_39 = 
      Action.assume(4, Expr.bgt(GccType.boolean, expr0x7f9e649ed708, expr0x7f9e65fa1240))
    in let step_6_40 = 
      Action.call(call0x7f9e64966c78)
    in let step_6_41 = 
      Action.assign(expr0x7f9e6498d318, call0x7f9e64966c78)
    in Block.block(
      6,
      [|
        step_6_39;
        step_6_40;
        step_6_41;
      |],
      [|
        ("memcmp", 1);
      |],
      [|
        "assume FALSE (n_39 <= 11)";
        "# VUSE <.MEM_38>\n_12 = memcmp (&buf, \"HTTP/\", 5);";
        "<CAPTURES RETURN>";
      |]
    )
  in let block_7 = 
    let step_7_42 = 
      Action.assume(6, Expr.beq(GccType.boolean, expr0x7f9e6498d318, expr0x7f9e66d71078))
    in let step_7_43 = 
      Action.assign(expr0x7f9e6498d3a8, Expr.pointer_plus(
        type0x7f9e66d741f8, expr0x7f9e6498e2e0, expr0x7f9e66ec7960))
    in let step_7_44 = 
      Action.call(call0x7f9e64966d10)
    in let step_7_45 = 
      Action.assign(expr0x7f9e6498d3f0, call0x7f9e64966d10)
    in Block.block(
      7,
      [|
        step_7_42;
        step_7_43;
        step_7_44;
        step_7_45;
      |],
      [|
        ("memcmp", 1);
      |],
      [|
        "assume FALSE (_12 != 0)";
        "_13 = &buf + 9;";
        "# VUSE <.MEM_38>\n_14 = memcmp (_13, \"200\", 3);";
        "<CAPTURES RETURN>";
      |]
    )
  in let block_8 = 
    let step_8_46 = 
      Action.assume(6, Expr.bneq(GccType.boolean, expr0x7f9e6498d318, expr0x7f9e66d71078))
    in let step_8_47 = 
      Action.assume(7, Expr.bneq(GccType.boolean, expr0x7f9e6498d3f0, expr0x7f9e66d71078))
    in let step_8_48 = 
      Action.assign(expr0x7f9e649ed828, expr0x7f9e66d71090)
    in let step_8_49 = 
      Action.assign(expr0x7f9e649ed0d8, expr0x7f9e649ed828)
    in Block.block(
      8,
      [|
        step_8_46;
        step_8_47;
        step_8_48;
        step_8_49;
      |],
      [|
        (* no calls *)
      |],
      [|
        "assume TRUE (_12 != 0)";
        "assume TRUE (_14 != 0)";
        "_43 = 1;";
        "_17 = _43";
      |]
    )
  in let block_9 = 
    let step_9_50 = 
      Action.assume(7, Expr.beq(GccType.boolean, expr0x7f9e6498d3f0, expr0x7f9e66d71078))
    in let step_9_51 = 
      Action.assume(10, Expr.bneq(GccType.boolean, expr0x7f9e649ed798, expr0x7f9e66d71090))
    in let step_9_52 = 
      Action.assume(11, Expr.bneq(GccType.boolean, expr0x7f9e6498d480, expr0x7f9e648a0f90))
    in let step_9_53 = 
      Action.call(call0x7f9e64981a80)
    in let step_9_54 = 
      Action.assign(expr0x7f9e649ed798, call0x7f9e64981a80)
    in let step_9_55 = 
      Action.debug("# DEBUG n => n_41")
    in Block.block(
      9,
      [|
        step_9_50;
        step_9_51;
        step_9_52;
        step_9_53;
        step_9_54;
        step_9_55;
      |],
      [|
        ("http_read_line", 1);
      |],
      [|
        "assume FALSE (_14 != 0)";
        "assume FALSE (n_41 == 1)";
        "assume FALSE (_15 == 10)";
        "# .MEM_40 = VDEF <.MEM_19>\nn_41 = http_read_line (print_fd_37(D), sok_35(D), &buf, 512);";
        "<CAPTURES RETURN>";
        "# DEBUG n => n_41";
      |]
    )
  in let block_10 = 
    let step_10_56 = 
      Action.assume(9, Expr.bgt(GccType.boolean, expr0x7f9e649ed798, expr0x7f9e66d71078))
    in Block.block(
      10,
      [|
        step_10_56;
      |],
      [|
        (* no calls *)
      |],
      [|
        "assume FALSE (n_41 <= 0)";
      |]
    )
  in let block_11 = 
    let step_11_57 = 
      Action.assume(10, Expr.beq(GccType.boolean, expr0x7f9e649ed798, expr0x7f9e66d71090))
    in let step_11_58 = 
      Action.assign(expr0x7f9e6498d480, expr0x7f9e6498a3b8)
    in Block.block(
      11,
      [|
        step_11_57;
        step_11_58;
      |],
      [|
        (* no calls *)
      |],
      [|
        "assume TRUE (n_41 == 1)";
        "# VUSE <.MEM_40>\n_15 = buf[0];";
      |]
    )
  in let block_12 = 
    let step_12_59 = 
      Action.assume(9, Expr.blte(GccType.boolean, expr0x7f9e649ed798, expr0x7f9e66d71078))
    in let step_12_60 = 
      Action.assume(11, Expr.beq(GccType.boolean, expr0x7f9e6498d480, expr0x7f9e648a0f90))
    in let step_12_61 = 
      Action.assign(expr0x7f9e649ed7e0, expr0x7f9e66d71078)
    in let step_12_62 = 
      Action.assign(expr0x7f9e649ed0d8, expr0x7f9e649ed7e0)
    in Block.block(
      12,
      [|
        step_12_59;
        step_12_60;
        step_12_61;
        step_12_62;
      |],
      [|
        (* no calls *)
      |],
      [|
        "assume TRUE (n_41 <= 0)";
        "assume TRUE (_15 == 10)";
        "_42 = 0;";
        "_17 = _42";
      |]
    )
  in let block_13 = 
    let step_13_63 = 
      Action.assign(expr0x7f9e6489e360, expr0x7f9e6496fb40)
    in let step_13_64 = 
      Action.assign(expr0x7f9e6489e3f0, expr0x7f9e6496fb58)
    in let step_13_65 = 
      Action.assign(expr0x7f9e6489e480, expr0x7f9e6496fb70)
    in let step_13_66 = 
      Action.return(expr0x7f9e649ed0d8)
    in Block.block(
      13,
      [|
        step_13_63;
        step_13_64;
        step_13_65;
        step_13_66;
      |],
      [|
        (* no calls *)
      |],
      [|
        "# .MEM_45 = VDEF <.MEM_20>\nbuf ={v} {CLOBBER};";
        "# .MEM_46 = VDEF <.MEM_45>\nauth_data ={v} {CLOBBER};";
        "# .MEM_47 = VDEF <.MEM_46>\nauth_data2 ={v} {CLOBBER};";
        "# VUSE <.MEM_47>\nreturn _17;";
      |]
    )
  in let block_1 = 
    let step_0_67 = Action.finish 
    in Block.block (
      1,
      [| step_0_67 |],
      [||],
      [| "<EXIT>" |]
    )
  in let cfg = Cfg.cfg (
    14,
    Z.of_string "14",
    [|
      Cfg.vert ("[0]", block_0, [|
          Cfg.edge (2, "[2]", block_2, Z.of_string "0", Z.of_string "13");
        |]
      );
      Cfg.vert ("[1]", block_1, [|
        |]
      );
      Cfg.vert ("[2]", block_2, [|
          Cfg.edge (3, "[3]", block_3, Z.of_string "0", Z.of_string "6");
          Cfg.edge (4, "[4]", block_4, Z.of_string "7", Z.of_string "13");
        |]
      );
      Cfg.vert ("[3]", block_3, [|
          Cfg.edge (4, "[4]", block_4, Z.of_string "0", Z.of_string "6");
        |]
      );
      Cfg.vert ("[4]", block_4, [|
          Cfg.edge (5, "[5]", block_5, Z.of_string "0", Z.of_string "0");
          Cfg.edge (6, "[6]", block_6, Z.of_string "1", Z.of_string "6");
        |]
      );
      Cfg.vert ("[5]", block_5, [|
          Cfg.edge (10, "[13]", block_13, Z.of_string "0", Z.of_string "0");
        |]
      );
      Cfg.vert ("[6]", block_6, [|
          Cfg.edge (7, "[7]", block_7, Z.of_string "0", Z.of_string "4");
          Cfg.edge (8, "[8]", block_8, Z.of_string "5", Z.of_string "5");
        |]
      );
      Cfg.vert ("[7]", block_7, [|
          Cfg.edge (8, "[8]", block_8, Z.of_string "0", Z.of_string "0");
          Cfg.edge (11, "[0 | 9]", block_9, Z.of_string "1", Z.of_string "4");
        |]
      );
      Cfg.vert ("[8]", block_8, [|
          Cfg.edge (10, "[13]", block_13, Z.of_string "0", Z.of_string "0");
        |]
      );
      Cfg.vert ("[12]", block_12, [|
          Cfg.edge (10, "[13]", block_13, Z.of_string "0", Z.of_string "0");
        |]
      );
      Cfg.vert ("[13]", block_13, [|
          Cfg.edge (1, "[1]", block_1, Z.of_string "0", Z.of_string "0");
        |]
      );
      Cfg.vert ("[0 | 9]", block_9, [|
          Cfg.edge (12, "[0 | 10]", block_10, Z.of_string "0", Z.of_string "2");
          Cfg.edge (9, "[12]", block_12, Z.of_string "3", Z.of_string "3");
        |]
      );
      Cfg.vert ("[0 | 10]", block_10, [|
          Cfg.edge (14, "[1 | 9]", block_9, Z.of_string "0", Z.of_string "0");
          Cfg.edge (13, "[0 | 11]", block_11, Z.of_string "1", Z.of_string "2");
        |]
      );
      Cfg.vert ("[0 | 11]", block_11, [|
          Cfg.edge (14, "[1 | 9]", block_9, Z.of_string "0", Z.of_string "0");
          Cfg.edge (9, "[12]", block_12, Z.of_string "1", Z.of_string "1");
        |]
      );
      Cfg.vert ("[1 | 9]", block_9, [|
          Cfg.edge (9, "[12]", block_12, Z.of_string "0", Z.of_string "0");
        |]
      );
    |]
  )
  in Proc.proc(
   "traverse_http",
    1008,
   "/target/hexchat/build",
   "../src/common/server.c",
   "server.c",
    cfg
  )
in Driver.execute main;;